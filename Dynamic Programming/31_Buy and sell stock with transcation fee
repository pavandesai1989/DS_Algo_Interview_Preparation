//https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/

class Solution {
    
    int f(vector<int> &p,int ind,int buy,int n,int fee,vector<vector<int>> &dp)
    {
        if(ind == n)
            return 0;
        
        if(dp[ind][buy] != -1)
            return dp[ind][buy];
        
        int op1=0;
        int op2=0;
        
        if(buy)
        {
            op1 = -p[ind] + f(p,ind+1,0,n,fee,dp);  //buy
            op2 = 0 + f(p,ind+1,1,n,fee,dp);  //don't buy
        }
        else
        {
            op1 = p[ind] - fee + f(p,ind+1,1,n,fee,dp);   //sell
            op2 = 0 + f(p,ind+1,0,n,fee,dp);  //don't sell
        }
        
        return dp[ind][buy] = max(op1,op2);
    }
public:
    int maxProfit(vector<int>& prices, int fee) 
    {
        vector<vector<int>> dp(prices.size(),vector<int>(2,-1));
        return f(prices,0,1,prices.size(),fee,dp);
    }
};
