//https://www.codingninjas.com/codestudio/problems/min-steps-to-one-using-dp_920548

*******Recursion*****
int ways(int n)
{
    //base case
    if(n==1)
        return 0;
    
    int op1 = ways(n-1);
    int op2 = 1e9;
    int op3 = 1e9;
    
    if(n%2 ==0)
        op2 = ways(n/2);
    if(n%3 ==0)
        op3 = ways(n/3);
    
    return min(op1,min(op2,op3)) + 1;
}

int countStepsToOne(int n) 
{
	return ways(n);
}

*******Memoization******
int ways(int n,vector<int> &dp)
{
    //base case
    if(n==1)
        return 0;
    
    if(dp[n] != -1)
        return dp[n];
    
    int op1 = ways(n-1,dp);
    int op2 = 1e9;
    int op3 = 1e9;
    
    if(n%2 ==0)
        op2 = ways(n/2,dp);
    if(n%3 ==0)
        op3 = ways(n/3,dp);
    
    return dp[n] = min(op1,min(op2,op3)) + 1;
}

int countStepsToOne(int n) 
{
    vector<int> dp(n+1,-1);
	return ways(n,dp);
}

******* TABULATION************
