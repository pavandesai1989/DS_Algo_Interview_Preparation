class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) 
    {
       int n =  obstacleGrid.size();
       int m = obstacleGrid[0].size();
        
       vector<vector<int>> dp(n,vector<int>(m,0));
        
       for(int i=0;i<n;i++)
       {
          for(int j=0;j<m;j++)
          {
            if(obstacleGrid[i][j] == 1)  //obstacle 
                dp[i][j] = 0;
            else if( i == 0 && j==0)
                dp[i][j] = 1;
            else
            {
               int left = 0;
               int top = 0;
            
               if(i > 0)
                 left = dp[i-1][j];
            
               if(j > 0)
                top = dp[i][j-1];
            
               dp[i][j] = (left + top); 
            }
          }
       }
         return dp[n-1][m-1]; //as we have matrix of m*n
    }
};
