//https://leetcode.com/problems/minimum-absolute-difference-in-bst/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* prev = NULL;
    void solve(TreeNode* root,int &ans)
    {
         if(root->left)
             solve(root->left,ans);
        
        if(prev!=NULL)
            ans = min(ans,abs(root->val - prev->val));
        
        //update the prev
        prev = root;
        
        if(root->right)
            solve(root->right,ans);
    }
    
public:
    int getMinimumDifference(TreeNode* root) 
    {
        int ans = 1e9;
        solve(root,ans);
        return ans;
    }
};
