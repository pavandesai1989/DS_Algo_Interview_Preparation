//https://leetcode.com/problems/minimum-distance-between-bst-nodes/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void getdiff(TreeNode* root,int &prev,int &ans)
    {
        if(!root)
            return;
        
        getdiff(root->left,prev,ans);
        ans = min(ans,abs(root->val-prev));
        //mark this node as prev
        prev = root->val;
        
        getdiff(root->right,prev,ans);
    }
public:
    int minDiffInBST(TreeNode* root) 
    {
        int prev = 1e9;
        int min = 1e9;
        
        getdiff(root,prev,min);
        
        return min;
    }
};
