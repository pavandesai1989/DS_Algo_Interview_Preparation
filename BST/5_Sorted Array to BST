//https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) 
    {
        int n = nums.size();
        if(n==0)  return nullptr;
        
        return BST(nums,n,0,n-1);
    }
    
    TreeNode* BST(vector<int>& nums,int n,int s,int e)
    {
        if(s > e)   return NULL;
        int mid = s + (e-s)/2;
        
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = BST(nums,n,s,mid-1);
        root->right = BST(nums,n,mid+1,e);
        
        return root;
    }
};
