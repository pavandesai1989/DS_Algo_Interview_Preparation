//https://leetcode.com/problems/split-array-largest-sum/


bool ispossiblesol(vector<int> &nums,int n,int m,int mid)
{
    int numele = 1;
    int sumvalue = 0;
    
    for(int i=0;i<n;i++)
    {
        if(sumvalue+nums[i]<=mid)
            sumvalue +=nums[i];
        else
        {
            numele++;
            
            if(numele > m || nums[i]>mid)
                return false;
            
            sumvalue = nums[i];
        }
    }
    return true;
        
}



class Solution {
public:
    int splitArray(vector<int>& nums, int m) 
    {
        int sum = 0;
        int max = 0; 
        int ans = -1;
        int mid = -1;
        
        for(auto ele:nums)
        {
            sum +=ele;
            if(ele > max)
                max = ele;
        }
        
        int s = max;
        int e = sum;
        
        while(s<=e)
        {
            mid = s + (e-s)/2;
            
            if(ispossiblesol(nums,nums.size(),m,mid) == true)
            {
                ans = mid;
                e = mid-1; //we want to minimize the max sum
            }
            else
                s = mid+1; //increase the sum value
        }
        return ans;
    }
};
