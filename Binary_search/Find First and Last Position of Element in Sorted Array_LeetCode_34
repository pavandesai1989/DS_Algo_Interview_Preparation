class Solution 
{   

public:
    vector<int> searchRange(vector<int>& nums, int target)  
    {
        //first occurance 
        int s = 0;
        int e = nums.size()-1;
        int first = -1;
        
        while(s<=e)
        {
            int mid = s + (e-s)/2;
            if(nums[mid] == target)
            {
                first = mid;
                //as we need first occu move to left of array
                e = mid-1;
            }
            else if(nums[mid] > target)
            {
                e = mid-1;
            }
            else
                s = mid+1;
        }
        
        //last occurance 
        s = 0;
        e = nums.size()-1;
        int last = -1;
        
        while(s<=e)  
        {
            int mid = s + (e-s)/2;
            if(nums[mid] == target)
            {
                last = mid;
                //as we need last occu move to right of array
                s = mid+1;
            }
            else if(nums[mid] > target)
            {
                e = mid-1;
            }
            else
                s = mid+1;
        }
        
        
        vector<int> ans;
    
        ans.push_back(first);
        ans.push_back(last);
        
        return ans;
         
    }
};
