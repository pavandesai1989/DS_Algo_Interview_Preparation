//same version of book allocation problem 

class Solution {
public:
    int ChekIfPossible(vector<int>& weights,int Maxweight)
    {
       int days=1;
       int locweight = 0;

       for(int i=0;i<weights.size();i++)
       {
           if(locweight+weights[i]<=Maxweight)
           {
               locweight += weights[i];
           }
           else
           {
               days++;
               locweight = weights[i];
           }
       }
       return days;
    }

    int shipWithinDays(vector<int>& weights, int days) 
    {
        int low = *max_element(weights.begin(),weights.end());
        int high = accumulate(weights.begin(),weights.end(),0);

        while(low<=high)
        {
            int mid = low + (high-low)/2;
            int isPossibleAns = ChekIfPossible(weights,mid);
            if(isPossibleAns>days)
              low = mid+1;
            else
              high = mid-1;  
        }
        return low;        
    }
};
