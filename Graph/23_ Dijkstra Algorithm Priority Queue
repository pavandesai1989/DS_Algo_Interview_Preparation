//https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1

Given a graph and a source vertex in the graph, find the shortest paths from the source to all vertices in the given graph.

{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        vector<int> dist(V,1e9);
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> q;
        
        //mark dist of S to 0
        dist[S] = 0;
        //push the S to the priority queue
        q.push({0,S});  //first is weight and second is the node
        
        while(!q.empty())
        {
            //take the top node.it will be of min dist
            int node = q.top().second;
            int d = q.top().first;
            q.pop();
            
            //visit the adj nodes
            for(auto it:adj[node])
            {
                int adjnode = it[0];
                int adjweight = it[1];
                
                if(d + adjweight < dist[adjnode])
                {
                    dist[adjnode]  = d + adjweight;
                    q.push({dist[adjnode],adjnode});
                }
            }
        }
        return dist;
    }
};
