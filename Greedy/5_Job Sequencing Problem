//https://www.codingninjas.com/codestudio/problems/job-sequencing-problem_1169460?leftPanelTab=0

*******

#include <bits/stdc++.h> 
bool comparator(vector<int> &a,vector<int> &b)
{
    return a[1] > b[1];
}
int jobScheduling(vector<vector<int>> &jobs)
{
    //sort based on profit
    sort(jobs.begin(),jobs.end(),comparator);
    
    //find max deadline
    int n = jobs.size();
    int maxdead = 0;
    for(int i=0;i<n;i++)
        maxdead = max(maxdead,jobs[i][1]);
    
    vector<int> slots(maxdead+1,-1);
    int profit = 0;
    
    for(int i=0;i<n;i++)
    {
        for(int j=jobs[i][0];j>0;j--)
        {
            if(slots[j] == -1)
            {
                slots[j] = i;
                profit += jobs[i][1];
                break;
            }
        }
    }
    return profit;
}


************

#include<algorithm>
bool compare(vector<int> &a, vector<int> &b)
{
	return a[1] > b[1];
}

int jobScheduling(vector<vector<int>> &jobs)
{
    //sort the array in decreasing order of profit
	sort(jobs.begin(),jobs.end(),compare);
	int n = jobs.size();
	
	int slots[n] = {0};
	int profit = 0;
	
	for(int i=0;i<n;i++)
	{
		for(int j=min(n,jobs[i][0]-1);j>=0;j--). // look for the empty slot.
		{   
			if(slots[j] == 0) //slot can be used
			{
				profit += jobs[i][1];
				slots[j] = 1;
				break;
			}
		}
	}
	
	return profit; 

}
