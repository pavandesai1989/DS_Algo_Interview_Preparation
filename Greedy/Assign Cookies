//Time O(nlogn) -- as we are sorting 

We want to give largest cookie to the greediest child. 

class Solution {
public:
    int findContentChildren(vector<int>& g, vector<int>& s) 
    {
        sort(g.begin(),g.end());
        sort(s.begin(),s.end());
        
        int i = 0;
        int j = 0;
        
        int count = 0;
        
        while(i<g.size() && j<s.size())
        {
            if(s[j]>=g[i])
            {
                i++;// assignment done for this guy
                count++;
            }
            j++; //try from the next cookies
        }
        
        return count;
    }
}; 
