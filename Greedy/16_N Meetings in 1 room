//https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1#

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution
{
    public:
    static bool sortbysec(pair<int,int> &p1,pair<int,int> &p2)
    {
        return p1.second < p2.second;
    }
    
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    int maxMeetings(int s[], int e[], int n)
    {
        vector<pair<int,int>> v(n);
        
        for(int i=0;i<n;i++)
        {
           v[i] = {s[i],e[i]};
        }
        
        //sort based on end time
        sort(v.begin(),v.end(),sortbysec);
        
        int ans = 1; //consider 1st meeting 
        int time_limit = v[0].second;
        
        for(int i=1;i<n;i++)
        {
            if(v[i].first > time_limit)
            {
                ans++;
                time_limit = v[i].second;
            }
        }
        
        return ans;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++) cin >> start[i];

        for (int i = 0; i < n; i++) cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(start, end, n);
        cout << ans << endl;
    }
    return 0;
}  // } Driver Code Ends
