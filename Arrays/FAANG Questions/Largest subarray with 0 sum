//https://practice.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1?page=1&difficulty[]=0&company[]=Amazon&company[]=Microsoft&company[]=Flipkart&company[]=Adobe&category[]=Arrays&sortBy=submissions

*** OPTIMAL****
Time : o(n)
space : o(n)

//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
/*You are required to complete this function*/

class Solution{
    public:
    int maxLen(vector<int>&A, int n)
    {   
        unordered_map<int,int> mp;
        int maxlen=0;
        int sum=0;
        
        for(int i=0;i<n;i++)
        {
            sum += A[i];
            //if we get sum as 0. From 0 index till ith index we got the sub array with 0 sum
            if(sum == 0)
              maxlen = i+1;
            else
            {
                //check if this sum exists in the map
                if(mp.find(sum) != mp.end()) //exists
                {
                    maxlen = max(maxlen,i-mp[sum]);
                }
                else  //add to the map
                  mp[sum] = i;
            }
        }
        return maxlen;
    }
};


//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int m;
        cin>>m;
        vector<int> array1(m);
        for (int i = 0; i < m; ++i){
            cin>>array1[i];
        }
        Solution ob;
        cout<<ob.maxLen(array1,m)<<endl;
    }
    return 0; 
}



// } Driver Code Ends
