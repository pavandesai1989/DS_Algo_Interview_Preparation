//https://leetcode.com/problems/maximum-subarray/

********* O(n2)*****
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int max_sum = INT_MIN;
        
        for(int i=0; i<nums.size(); i++){
            int curr_sum = 0;
            for(int j=i; j<nums.size(); j++){
                curr_sum += nums[j];
                //cout<<curr_sum<<endl;
                max_sum = max(max_sum, curr_sum);
            }
        }
    return max_sum;
    }
};

******** o(n)*******

class Solution {
public:
    int maxSubArray(vector<int>& nums) 
    {
        int sum = 0;
        int maxi = INT_MIN;
        
        for(auto it:nums)
        {
            sum += it;
            maxi = max(sum,maxi);
            if(sum<0)  sum = 0;
        }
        return maxi;
    }
};

