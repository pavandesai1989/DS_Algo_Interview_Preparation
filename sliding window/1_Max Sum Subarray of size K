//Max Sum Subarray of size K
https://practice.geeksforgeeks.org/problems/max-sum-subarray-of-size-k5313/1/?page=1&difficulty[]=-1&category[]=sliding-window&sortBy=submissions#

// { Driver Code Starts
#include<bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
class Solution{   
public:
    long maximumSumSubarray(int K, vector<int> &Arr , int N)
    {
        long curr_sum = 0;
        long mx_sum = 0;
        
        for(int i=0;i<K;i++)
           curr_sum += Arr[i];
        
        mx_sum = curr_sum;
        
        for(int i=K;i<N;i++)
        {
            curr_sum += Arr[i] - Arr[i-K];
            //update the maz sum
            mx_sum = max(mx_sum,curr_sum);
        }
        return mx_sum;
    }
};

// { Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N,K;
        cin >> N >> K;;
        vector<int>Arr;
        for(int i=0;i<N;++i){
            int x;
            cin>>x;
            Arr.push_back(x);
        }
        Solution ob;
        cout << ob.maximumSumSubarray(K,Arr,N) << endl;
    }
    return 0; 
}   // } Driver Code Ends
