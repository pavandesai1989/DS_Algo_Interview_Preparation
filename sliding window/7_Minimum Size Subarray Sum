Minimum Size Subarray Sum
//https://leetcode.com/problems/minimum-size-subarray-sum/

***BRUTE FORCE***
class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) 
    {
        int curr_sum=0;
        int n=nums.size();
        int res=n+1;

        
        for(int i=0;i<n;i++)
        {
            curr_sum = nums[i];
            
            if(curr_sum >= target)
                return 1;
            
            for(int j=i+1;j<n;j++)
            {
                curr_sum += nums[j];
                
                if(curr_sum>=target)
                  res = min(res,j-i+1);
            }
        }
        
        return res;
    }
};

***** OPTIMISED******
class Solution {
public:
    int minSubArrayLen(int target, vector<int>& arr) 
    {
        int i=0,j=0,n=arr.size();
        int sum = 0;
        int ans = INT_MAX;
        while(j < n)
        {
            if(sum < target)
            {
                sum += arr[j];
            }
            if(sum >= target)
            {
                while(i <= j and sum >= target){
                    sum -= arr[i];
                    ans = min(ans,j-i+1);
                    i++;
                }
            }
            j++;
        }
        return ans == INT_MAX ? 0 : ans;
    }
};

