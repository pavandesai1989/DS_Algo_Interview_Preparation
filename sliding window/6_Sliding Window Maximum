//https://leetcode.com/problems/sliding-window-maximum/

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) 
    {
        vector<int> res;
        deque<int> dq;
        int n=nums.size();
        
        //process first window
        for(int i=0;i<k;i++)
        {
            while(!dq.empty() && dq.back()<nums[i])
                dq.pop_back();
            
            dq.push_back(nums[i]);
        }
        //add ans to res
        res.push_back(dq.front());
        
        for(int i=k;i<n;i++)
        {
            //if lar ele from prev window present remove
            if(dq.front() == nums[i-k])
                dq.pop_front();
            
            while(!dq.empty() && dq.back()<nums[i])
                dq.pop_back();
            
            dq.push_back(nums[i]);
            res.push_back(dq.front());
        }
        
        return res;
    }
};
