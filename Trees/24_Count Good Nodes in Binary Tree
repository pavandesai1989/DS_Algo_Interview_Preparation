//https://leetcode.com/problems/count-good-nodes-in-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int count=0;
    void countgoodnodes(TreeNode* root,long mxval)
    {
        if(root == nullptr)
            return;
        
        if(root->val >= mxval)
        {
            count++;
            mxval = root->val;
        }
        
        countgoodnodes(root->left,mxval);
        countgoodnodes(root->right,mxval);
    }
public:
    int goodNodes(TreeNode* root) 
    {
        if(root == nullptr)
            return count;
        
        countgoodnodes(root,LONG_MIN);
        return count;
    }
};
