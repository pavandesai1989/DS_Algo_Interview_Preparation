//https://leetcode.com/problems/binary-tree-right-side-view/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void RightView(TreeNode* root,vector<int> &res,int lvl)
    {
        if(!root)   return;
        if(res.size() == lvl)  //we have reached new level
            res.push_back(root->val);
        
        RightView(root->right,res,lvl+1);
        RightView(root->left,res,lvl+1);
    }
public:
    vector<int> rightSideView(TreeNode* root) 
    {
        vector<int> res;
        if(!root)  return res;
        RightView(root,res,0);
        return res;
    }
};
