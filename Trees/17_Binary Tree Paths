//https://leetcode.com/problems/binary-tree-paths/

#include <bits/stdc++.h>

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void helper(TreeNode* root,vector<string> &res,string ds)
    {
        if(!root) return;
        if(root->left == NULL && root->right == NULL)
        {
            ds += to_string(root->val);
            res.push_back(ds);
            
            return;
        }
        else
          ds = ds + to_string(root->val) + "->";
        
        helper(root->left,res,ds);
        helper(root->right,res,ds);
        
    } 

    
    
public:
    vector<string> binaryTreePaths(TreeNode* root) 
    {
        vector<string> res;
        if(!root)
            return res;
        
        string ds ="";
        helper(root,res,ds);
        
        return res;
    }
};
