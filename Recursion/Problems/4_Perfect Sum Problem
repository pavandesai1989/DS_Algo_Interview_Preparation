//https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1#
Given an array arr[] of non-negative integers and an integer sum, the task is to count all subsets of the given array with a sum equal to a given sum

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
    
    int helper(int arr[],int n,int tar,int i,int s,vector<int> &ds)
    {
        //base case
        if(i == n)
        {
            if(s == tar)
              return 1;
            else 
              return 0;
        }
        
        //pick case
        ds.push_back(arr[i]);
        s += arr[i];
        
        int left = helper(arr,n,tar,i+1,s,ds);
        //not pick case
        ds.pop_back();
        s -= arr[i];
        
        int right = helper(arr,n,tar,i+1,s,ds);
        
        return left + right;
    }

	public:
	int perfectSum(int arr[], int n, int tar)
	{
      vector<int> ds;
      return helper(arr,n,tar,0,0,ds);
    }

	  
};

// { Driver Code Starts.
int main() 
{
   	
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n, sum;

        cin >> n >> sum;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.perfectSum(a, n, sum) << "\n";
	     
    }
    return 0;
}
  // } Driver Code Ends
