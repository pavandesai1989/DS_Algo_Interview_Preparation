//https://www.codingninjas.com/codestudio/problems/combination-sum-ii_1112622?topList=top-recursion-and-backtracking-interview-questions&leftPanelTab=0
//https://leetcode.com/problems/combination-sum-ii/

#include<vector>
#include<algorithm>

void helper(vector<int> &arr,int n,int tar,int idx,vector<int> &ds,vector<vector<int>> &res)
{
    if(tar == 0)
    {
        res.push_back(ds);
        return;
    }
    
    for(int i=idx;i<n;i++)
    {
        if(i>idx && arr[i] == arr[i-1]) continue;
        if(arr[i] > tar) break;
        ds.push_back(arr[i]);
        helper(arr,n,tar-arr[i],i+1,ds,res);
        ds.pop_back();
    }
}


vector<vector<int>> combinationSum2(vector<int> &arr, int n, int target)
{
	vector<int> ds;
    vector<vector<int>> res;
    sort(arr.begin(),arr.end());
    helper(arr,n,target,0,ds,res);
    return res;
}
