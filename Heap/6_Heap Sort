//https://www.codingninjas.com/codestudio/problems/heap-sort_1262153

void heapify(vector<int> &arr,int n,int i)
{
 // Initialize largest as root
    int largest = i;
   
  // left = 2*i + 1
    int l = 2 * i + 1;
   
  // right = 2*i + 2
    int r = 2 * i + 2;
 
    // If left child is larger than root
    if (l < n && arr[l] > arr[largest])
        largest = l;
 
    // If right child is larger than largest
    // so far
    if (r < n && arr[r] > arr[largest])
        largest = r;
 
    // If largest is not root
    if (largest != i) {
        swap(arr[i], arr[largest]);
 
        // Recursively heapify the affected
        // sub-tree
        heapify(arr, n, largest);
    }
}

vector<int> heapSort(vector<int>& arr, int n) 
{
    //build the heap
    for(int i=n/2-1;i>=0;i--) //0 based index
        heapify(arr,n,i);
    
    for(int i=n-1;i>0;i--)
    {
        //swap first and last ele
        swap(arr[0],arr[i]);
        heapify(arr,i,0);
    }
    
    return arr;
}
