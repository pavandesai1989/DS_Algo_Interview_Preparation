class Solution {
void combs(int idx,int target,vector<int> &arr,vector<int> &ds,vector<vector<int>> &ans)
{
    //base case
    if(target == 0)
    {
        ans.push_back(ds);
        return;
    }
    
    for(int i=idx;i<arr.size();i++)
    {
        //avoid duplicates
        if(i>idx && arr[i]==arr[i-1])
            continue;
        if(arr[i] > target)
            break;
        //add in ds
        ds.push_back(arr[i]);
        combs(i+1,target-arr[i],arr,ds,ans);
        
        ds.pop_back();
    }
}
    
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target)
    {
        //imp sort the array
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> ans;
        vector<int> ds;
        
        combs(0,target,candidates,ds,ans);
        return ans;
    }
};
